! Transformer
! Test case: Frederic Trillaud <ftrillaudp@gmail.com>
! Original date: March 2025


Include ./mesh/mesh.names
Include ./data/data.dat
Include circuit.definitions

!!! PARAMETERS !!!

!--- frequency
$ freq = 60.0
!--- Pulsation
$ w = 2.0 * pi * freq


Header
  CHECK KEYWORDS Warn
  Mesh DB "." "mesh"
  Results Directory "resu"
End


!!! SIMULATION !!!
Simulation
  Coordinate System = String "Cartesian 3D"
  Coordinate Mapping(3) = 1 2 3

  Simulation Type = String "Steady state"
  Steady State Max Iterations = 1
  !Steady State Min Iterations = 2

  Angular Frequency = $ w

  Output File = "fresults.dat"

  Output Intervals = 0
  Max Output Level = 10
End


!!! Physics constants !!!
Constants
  Gravity(4) = 0 0 -1 9.82
  Stefan Boltzmann = 5.67e-08
  Permittivity of Vacuum = 8.8542e-12
  Permeability of Vacuum = 1.256e-6
  Boltzmann Constant = 1.3807e-23
  Unit Charge = 1.602e-19
End


!!! BODIES !!!
!--- No need to give the body force for the circuit. By default, it is the body force 1
!--- However, it is necessary for the heat source to provide a body force
Body 1
  Name = "coil1"
  Target Bodies(1) = $ coil1
  Equation = 1
  Material = 1
  Initial Condition = 1
  Body Force = 1
End

Body 2
  Name = "coil2"
  Target Bodies(1) = $ coil2
  Equation = 1
  Material = 1
  Initial Condition = 1
End

!--- Be aware that all the non inductors should not use the CoilSolver.
Body 3
  Name = "core"
  Target Bodies(1) = $ core
  Equation = 2
  Material = 2
  Initial Condition = 1
End

Body 4
  Name = "air"
  Target Bodies(1) = $ air
  Equation = 2
  Material = 3
  Initial Condition = 1
End


!!! MATERIAL PROPERTIES !!!
Material 1
  Name = "Cu"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0
  Electric Conductivity = Real 5.96e7

  Density = Real 8960.0
  Heat Conductivity = 100.0
  Heat Capacity = Real 1.0
End

Material 2
  Name = "Iron"
  Relative Permittivity = Real 1.0
  Electric Conductivity = Real 1000.0

  Relative Permeability = Real 1500.0
!~   H-B Curve = Variable "dummy"
!~     Real Cubic Monotone
!~         Include ./data/BHM1960Hz.dat
!~     End

  Density = Real 7860.0
  Heat Conductivity = 100.0
  Heat Capacity = 0.1
End

Material 3
  Name = "Air"
  Relative Permeability = Real 1.0
  Relative Permittivity = Real 1.0
End


!!! BODY FORCES !!!
Body Force 1
  Name = "Sources"
  !--- The only place to define the sources for all the electric circuits
  !--- In frequency domain model, it is important to write: S Re = Real XXX (here "Real" matters!)
  !--- Primary voltage (S1)
  S1_Source Re = Real 100.0
  S1_Source Im = Real 0.0
End


!!! COMPONENTS !!!
Component 1
  Name = "coil1"
  Master Bodies Name = String "coil1"
  Master Bodies(1) = Integer $ coil1
  Coil Type = "Stranded"
  Number of Turns = Real $ N_coil1
  !Resistance = Real $ R_coil1
 
  ! Additions for 3D Coil
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Electrode Area = Real $ Ae_coil1
  
  !Desired Current Density = Real 1.0

  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
  Coil Center(3) = Real 0.0 0.0 0.0
End

Component 2
  Name = "coil2"
  Master Bodies Name = String "coil2"
  Master Bodies(1) = Integer $ coil2
  Coil Type = "Stranded"
  Number of Turns = Real $ N_coil2
  !Resistance = Real $ R_coil1
 
  ! Additions for 3D Coil
  Coil Use W Vector = Logical True
  W Vector Variable Name = String "CoilCurrent e"
  Electrode Area = Real $ Ae_coil2
  
  !Desired Current Density = Real 1.0

  Fit Coil = Logical False
  Coil Normal(3) = Real 0.0 0.0 1.0
  Coil Center(3) = Real 0.0 0.0 0.0
End


!!! BOUNDARY CONDITIONS !!!
Initial Condition 1
  Name = "Initial condition"
   A re {e} = Real 0.0
   A im {e} = Real 0.0
   A re = Real 0.0
   A im = Real 0.0
End

Boundary Condition 1
  Name = "Far field"
  Target Boundaries(1) = $ airboundary
  !Infinity BC = True
  A re {e} = Real 0.0
  A im {e} = Real 0.0
  A re = Real 0.0
  A im = Real 0.0
End


!!! EQUATIONS !!!
Equation 1
  Name = "Multiphysics for inductors"
  Active Solvers(7) = 1 2 3 4 5 6 7
End

Equation 2
  Name = "Multiphysics for magnetic core and air"
  Active Solvers(3) = 3 4 5
End


!!! SOcoil2ERS !!!
Solver 1  !--- CoilSolver: Current density in closed coil
  Exec Solver = Before All
  Equation = "CoilSolver"
  Procedure = "CoilSolver" "CoilSolver"

  Steady State Convergence Tolerance = 1.0e-6 ! related to the Steady State Iterations (see Simulation)

  Linear System Solver = "Iterative"
  Linear System Preconditioning = ILU1
  Linear System Max Iterations = 500
  Linear System Convergence Tolerance = 1.0e-8 ! to get proper current density flow
  Linear System Iterative Method = BiCGStab
  Linear System Residual Output = 1

  Normalize Coil Current = Logical True ! necessary to have a uniform current across the coil
  Fix Input Current Density = Logical True
  Nonlinear System Consistent Norm = Logical True
  
  Coil Closed = Logical True
  Narrow Interface = Logical True

  Save Coil Set = Logical True
  Save Coil Index = Logical True
  
  Calculate Elemental Fields = Logical True
End

Solver 2 !--- CircuitsAndDynamics: External electrical circuit
   Exec Solver = Always
   Equation = Circuits
   Procedure = "CircuitsAndDynamics" "CircuitsAndDynamicsHarmonic"
   Variable = X
   No Matrix = Logical True
End

Solver 3  !---- MagnetoDynamics, WhitneyAVSolver: A-V solver
   Exec Solver = Always
   Equation = "MGDynamics"
   Variable = "A[A re:1 A im:1]"
   Procedure = "MagnetoDynamics" "WhitneyAVHarmonicSolver"
   
   Angular Frequency = $ w

   Fix Input Current Density = False
   
   Nonlinear Pre Solvers(1) = 2 ! run the circuit solver iteratively
   Post Solvers(1) = 4 ! postprocess the circuit outputs

   Steady State Convergence Tolerance = 1.0e-6
    
   Nonlinear System Convergence Without Constraints = True ! to fix the vector length mismatch
   Nonlinear System Convergence Tolerance = 1e-6
   Nonlinear System Max Iterations = 50
   !Nonlinear System Newton After Iterations = 5 ! change from Picard to Newton after 5 iterations
   Nonlinear System Newton After Tolerance = 1.0e-6
   Nonlinear System Relaxation Factor = 0.98

   Export Lagrange Multiplier = Logical True

   !--- Solution circuit:
   Linear System Solver = Iterative
   Linear System Iterative Method = BicgstabL
   BicgstabL polynomial degree = 6
   Linear System Preconditioning = circuit ! inversion of circuit matrix
   Linear System Convergence Tolerance = 1.0e-8 ! add to drop the tolerance
   Linear System Max Iterations = 3000
   Linear System Residual Output = 20
   Linear System Robust = True
End

Solver 4  !---- MagnetoAndDynamics, MagnetoDynamicsCalcFields: filed computation from A-V solver
  Exec Solver = Always
  Equation = MGDynamicsCalc
  Procedure = "MagnetoDynamics" "MagnetoDynamicsCalcFields"

  Potential Variable = String "A"

  Steady State Convergence Tolerance = 1.0e-6

  Linear System Solver = Iterative
  Linear System Symmetric = True
  Linear System Iterative Method = CG
  Linear System Max Iterations = 3000
  Linear System Convergence Tolerance = 1.0e-7
  Linear System Preconditioning = ILU0
  Linear System ILUT Tolerance = 1.0e-6
  Linear System Abort Not Converged = False
  Linear System Residual Output = 1
  Linear System Precondition Recompute = 1
  Linear System Residual Output = 10

  Discontinuous Bodies = Logical True

  Calculate Elemental Fields = Logical True
  Calculate Current Density = Logical True
End

Solver 5 !--- ResultOuputSolve, ResultOuputSolver: save computed fields
   Exec Solver = After timestep
   Equation = "ResultOutput"
   Procedure = "ResultOutputSolve" "ResultOutputSolver"

   Vtu Format = Logical True
   Binary Output = Logical False

   Output File Name = File "frequency"

! This makes it easier to pick any given piece
!   Vtu Part Collection = True
!   Save Bulk Only = True
   Save Geometry Ids = Logical True
End

Solver 6  !--- CircuitsAndDynamics, CircuitsOutput: save data from circuit
   Exec Solver = Always
   Equation = Circuits Output
   Procedure = "CircuitsAndDynamics" "CircuitsOutput"
End

Solver 7  !--- SaveData, SaveScalars: write circuit variables to file
   Exec Solver = After timestep
   Equation = "sv"
   Procedure = "SaveData" "SaveScalars"
   Filename = "fcircuit.dat"
End

